// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using senai.InLock.webAPI.CodeFirst.Contexts;

namespace senai.InLock.webAPI.CodeFirst.Migrations
{
    [DbContext(typeof(InLockCodeFirstContext))]
    [Migration("20210915210813_criacaoBD")]
    partial class criacaoBD
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("senai.InLock.webAPI.CodeFirst.Domains.Estudios", b =>
                {
                    b.Property<byte>("IdEstudio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("NomeEstudio")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.HasKey("IdEstudio");

                    b.HasIndex("NomeEstudio")
                        .IsUnique();

                    b.ToTable("ESTUDIO");

                    b.HasData(
                        new
                        {
                            IdEstudio = (byte)1,
                            NomeEstudio = "Blizzard"
                        },
                        new
                        {
                            IdEstudio = (byte)2,
                            NomeEstudio = "Rockstar Studios"
                        },
                        new
                        {
                            IdEstudio = (byte)3,
                            NomeEstudio = "Santa Monica Studios"
                        });
                });

            modelBuilder.Entity("senai.InLock.webAPI.CodeFirst.Domains.Jogos", b =>
                {
                    b.Property<int>("IdJogo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("DATE");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte>("IdEstudio")
                        .HasColumnType("TINYINT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("DECIMAL");

                    b.HasKey("IdJogo");

                    b.HasIndex("IdEstudio");

                    b.ToTable("JOGO");

                    b.HasData(
                        new
                        {
                            IdJogo = 1,
                            DataLancamento = new DateTime(2014, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Um jogo de cartas virtual com foco principal em pvp",
                            IdEstudio = (byte)1,
                            Nome = "Hearthstone",
                            Valor = 59.99m
                        },
                        new
                        {
                            IdJogo = 2,
                            DataLancamento = new DateTime(2013, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Grand Theft Auto V é um jogo eletrônico de ação-aventura",
                            IdEstudio = (byte)2,
                            Nome = "GTA V",
                            Valor = 159.99m
                        },
                        new
                        {
                            IdJogo = 3,
                            DataLancamento = new DateTime(2018, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Sua vingança contra os deuses do Olimpo agora é passado, e Kratos vive como um homem comum nas terras dos monstros e deuses nórdicos. E é nesse mundo inóspito e implacável que ele precisa lutar para sobreviver... e ensinar seu filho a fazer o mesmo.",
                            IdEstudio = (byte)3,
                            Nome = "God Of War IV",
                            Valor = 159.99m
                        });
                });

            modelBuilder.Entity("senai.InLock.webAPI.CodeFirst.Domains.TiposUsuario", b =>
                {
                    b.Property<byte>("IdTipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("IdTipoUsuario");

                    b.HasIndex("Titulo")
                        .IsUnique();

                    b.ToTable("TIPO_USUARIO");

                    b.HasData(
                        new
                        {
                            IdTipoUsuario = (byte)1,
                            Titulo = "Administrador"
                        },
                        new
                        {
                            IdTipoUsuario = (byte)2,
                            Titulo = "Comum"
                        });
                });

            modelBuilder.Entity("senai.InLock.webAPI.CodeFirst.Domains.Usuarios", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.Property<byte>("IdTipoUsuario")
                        .HasColumnType("TINYINT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("VARCHAR(16)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IdTipoUsuario");

                    b.ToTable("USUARIO");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            Email = "comum@comum.com",
                            IdTipoUsuario = (byte)2,
                            Senha = "comum"
                        },
                        new
                        {
                            IdUsuario = 2,
                            Email = "admin@admin.com",
                            IdTipoUsuario = (byte)1,
                            Senha = "admin"
                        });
                });

            modelBuilder.Entity("senai.InLock.webAPI.CodeFirst.Domains.Jogos", b =>
                {
                    b.HasOne("senai.InLock.webAPI.CodeFirst.Domains.Estudios", "EstudioConexao")
                        .WithMany()
                        .HasForeignKey("IdEstudio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstudioConexao");
                });

            modelBuilder.Entity("senai.InLock.webAPI.CodeFirst.Domains.Usuarios", b =>
                {
                    b.HasOne("senai.InLock.webAPI.CodeFirst.Domains.TiposUsuario", "TipoUsuarioConexao")
                        .WithMany()
                        .HasForeignKey("IdTipoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUsuarioConexao");
                });
#pragma warning restore 612, 618
        }
    }
}
